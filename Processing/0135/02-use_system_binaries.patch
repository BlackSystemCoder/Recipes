Use the java and jikes binaries installed on the system insetad of the one provided by processing

--- processing-0135/processing	2007-11-07 22:24:48.000000000 +0100
+++ processing-0135/processing.new	2008-02-03 13:14:41.000000000 +0100
@@ -8,7 +8,7 @@
 # help, but doesn't work in cases where there are spaces in the name 
 # of the folder that contains processing itself.
 
-CLASSPATH=java/lib/rt.jar:lib:lib/build:lib/pde.jar:lib/core.jar:lib/antlr.jar:lib/oro.jar:lib/registry.jar:lib/mrj.jar
+CLASSPATH=lib:lib/build:lib/pde.jar:lib/core.jar:lib/antlr.jar:lib/oro.jar:lib/registry.jar:lib/mrj.jar
 export CLASSPATH
 
 # put the directory where this file lives in the front of the path, 
@@ -17,14 +17,14 @@
 #PATH=`pwd`/`dirname $0`:`pwd`/java/bin:${PATH}
 #PATH=$APPDIR:$APPDIR/java/bin:${PATH}
 #echo $PATH
-PATH=.:java/bin:${PATH}
+PATH=.:${PATH}
 export PATH
 
 # test to see if jikes is operable. i'm a crappy bash scripter
 # so if someone knows a more elegant way to do this, let me know.
 #
 #echo $APPDIR/jikes
-"$APPDIR/jikes" -version 1> /dev/null 2> /dev/null
+jikes -version 1> /dev/null 2> /dev/null
 # if stmt modified as per bug #373
 if [ $? -eq 0 ]
 then 

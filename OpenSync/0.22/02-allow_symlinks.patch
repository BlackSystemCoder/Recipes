Removes test for symlinks for plugin, group and filter files as the test
stopped these files from loading. These files will be symlinks on a
GoboLinux system.

# Jonas Karlsson

--- libopensync-0.22/opensync/opensync_plugin.c	2007-03-27 11:49:18.000000000 +0000
+++ libopensync-0.22/opensync/opensync_plugin.c.new	2008-02-21 13:57:19.000000000 +0000
@@ -370,7 +370,7 @@
 	while ((de = g_dir_read_name(dir))) {
 		filename = g_strdup_printf ("%s/%s", path, de);
 		
-		if (!g_file_test(filename, G_FILE_TEST_IS_REGULAR) || g_file_test(filename, G_FILE_TEST_IS_SYMLINK) || !g_pattern_match_simple("*.so", filename)) {
+		if (!g_file_test(filename, G_FILE_TEST_IS_REGULAR) || !g_pattern_match_simple("*.so", filename)) {
 			g_free(filename);
 			continue;
 		}
--- libopensync-0.22/opensync/opensync_env.c	2007-03-27 11:49:18.000000000 +0000
+++ libopensync-0.22/opensync/opensync_env.c.new	2008-02-21 14:05:23.000000000 +0000
@@ -530,7 +530,7 @@
 	while ((de = g_dir_read_name(dir))) {
 		filename = g_strdup_printf ("%s/%s", real_path, de);
 		
-		if (!g_file_test(filename, G_FILE_TEST_IS_DIR) || g_file_test(filename, G_FILE_TEST_IS_SYMLINK) || !g_pattern_match_simple("group*", de)) {
+		if (!g_file_test(filename, G_FILE_TEST_IS_DIR) || !g_pattern_match_simple("group*", de)) {
 			g_free(filename);
 			continue;
 		}
--- libopensync-0.22/opensync/opensync_group.c	2007-03-27 11:49:18.000000000 +0000
+++ libopensync-0.22/opensync/opensync_group.c.new	2008-02-21 14:08:26.000000000 +0000
@@ -166,7 +166,7 @@
 	const gchar *de = NULL;
 	while ((de = g_dir_read_name(dir))) {
 		filename = g_strdup_printf ("%s/%s", osync_group_get_configdir(group), de);
-		if (!g_file_test(filename, G_FILE_TEST_IS_DIR) || g_file_test(filename, G_FILE_TEST_IS_SYMLINK) || g_pattern_match_simple(".*", de) || !strcmp("db", de)) {
+		if (!g_file_test(filename, G_FILE_TEST_IS_DIR) || g_pattern_match_simple(".*", de) || !strcmp("db", de)) {
 			g_free(filename);
 			continue;
 		}
